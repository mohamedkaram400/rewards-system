services:
  app1:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: replica-1
    ports:
      - "9000:9000"  
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - mysql_master
      - mysql_replica1
    environment:
      APP_NAME: Replica-1
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - rewards
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  app2:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: replica-2
    ports:
      - "9001:9000"  
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - mysql_master
      - mysql_replica1
    environment:
      APP_NAME: Replica-2
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - rewards
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: rewards-nginx
    ports:
      - "8000:80" 
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2
    networks:
      - rewards
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql_master:
    image: mysql:5.7
    container_name: mysql-master
    ports:
      - "3309:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: >
      --server-id=1
      --log-bin=mysql-bin
    volumes:
      - mysql-master:/var/lib/mysql
    networks:
      - rewards

  mysql_replica1:
    image: mysql:5.7
    container_name: mysql-replica1
    ports:
      - "3310:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: >
      --server-id=2
      --read-only=1
      --relay-log=mysql-relay-bin
      --log-bin=mysql-bin
      --log-slave-updates=1
    volumes:
      - mysql-replica1:/var/lib/mysql
    networks:
      - rewards
    depends_on:
      - mysql_master

  redis:
    image: redis:alpine
    container_name: rewards-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - rewards
  
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: rewards-elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - rewards
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./docker/prometheus:/etc/prometheus:ro
      - prom_data:/prometheus
    networks:
      - rewards 
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    volumes:
      - grafana_storage:/var/lib/grafana
    networks:
      - rewards 
      
networks:
  rewards:
    driver: bridge

volumes:
  mysql-master:
  mysql-replica1:
  redis_data:
  grafana_storage:
  prom_data:
  elasticsearch_data:
  
